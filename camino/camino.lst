CCS PCM C Compiler, Version 4.049, 57050               24-giu-08 14.11

               Filename: camino.lst

               ROM used: 656 words (32%)
                         Largest free fragment is 1392
               RAM used: 35 (27%) at main() level
                         39 (30%) worst case
               Stack:    4 worst case (3 in main + 1 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   226
0003:  NOP
0004:  BTFSC  03.5
0005:  GOTO   00A
0006:  MOVWF  25
0007:  SWAPF  03,W
0008:  MOVWF  26
0009:  GOTO   00F
000A:  BCF    03.5
000B:  MOVWF  25
000C:  SWAPF  03,W
000D:  MOVWF  26
000E:  BSF    26.1
000F:  MOVF   0A,W
0010:  MOVWF  2D
0011:  CLRF   0A
0012:  BCF    03.7
0013:  SWAPF  25,F
0014:  MOVF   04,W
0015:  MOVWF  27
0016:  MOVF   20,W
0017:  MOVWF  28
0018:  MOVF   21,W
0019:  MOVWF  29
001A:  MOVF   22,W
001B:  MOVWF  2A
001C:  MOVF   23,W
001D:  MOVWF  2B
001E:  MOVF   24,W
001F:  MOVWF  2C
0020:  BCF    03.5
0021:  MOVLW  8C
0022:  MOVWF  04
0023:  BTFSS  00.5
0024:  GOTO   027
0025:  BTFSC  0C.5
0026:  GOTO   040
0027:  BTFSS  0B.5
0028:  GOTO   02B
0029:  BTFSC  0B.2
002A:  GOTO   043
002B:  MOVF   27,W
002C:  MOVWF  04
002D:  MOVF   28,W
002E:  MOVWF  20
002F:  MOVF   29,W
0030:  MOVWF  21
0031:  MOVF   2A,W
0032:  MOVWF  22
0033:  MOVF   2B,W
0034:  MOVWF  23
0035:  MOVF   2C,W
0036:  MOVWF  24
0037:  MOVF   2D,W
0038:  MOVWF  0A
0039:  SWAPF  26,W
003A:  MOVWF  03
003B:  BCF    03.5
003C:  SWAPF  25,W
003D:  BTFSC  26.1
003E:  BSF    03.5
003F:  RETFIE
.................... #INCLUDE <16F870.h> 
.................... //////// Standard Header file for the PIC16F870 device //////////////// 
.................... #device PIC16F870 
.................... #list 
....................  
.................... #DEVICE *=16 
.................... #IGNORE_WARNINGS 203,202 
.................... #USE DELAY (clock=4000000) 
.................... #FUSES 	XT, WDT, NOPROTECT, PUT, NODEBUG, BROWNOUT, NOLVP, NOCPD, NOWRT 
.................... //#USE rs232(baud=9600, xmit=PIN_C6,rcv=PIN_C7) 
.................... #USE FAST_IO(C) 
.................... #USE FAST_IO(B) 
.................... #USE FAST_IO(A) 
....................  
.................... //########################################## 
.................... //          DEFINIZIONE VARIABILI          # 
.................... //########################################## 
....................  
.................... short time1,time2,time3,time4; 
.................... int tempo2,tempo3,tempo4; 
....................  
.................... int TIME_SALVATAGGIO; 
....................  
.................... int UNITA, DECINE, VIS, TIME_VIS; 
.................... short SW_DISP; 
....................  
.................... short premuto, era_premuto, premuto_f; 
.................... int temporaneo, filtro, ripetizione, tasti; 
....................  
.................... int CONT_SINC, TIME_INNESCO; 
.................... int DATI_MEMO[5]; 
....................  
....................  
.................... #BYTE PORTA = 0x05 
.................... #BYTE PORTB = 0X06	 
.................... #BYTE PORTC = 0x07 
.................... #BYTE ADCON0 = 0x1f 
.................... #BYTE ADCON1 = 0x9f 
.................... #BYTE ADRESH = 0x1e 
.................... #BYTE ADRESL = 0x9e 
.................... #BYTE TXREG = 0X19 
.................... #BYTE RCREG = 0X1A 
.................... #BYTE FSR   = 0X04 
.................... #BYTE INDF  = 0X00 
.................... #BYTE RCSTA = 0X18 
.................... #BYTE TXSTA = 0X98 
.................... #BYTE SPBRG = 0X99 
....................  
....................  
.................... #BIT DISP_UNITA = PORTC.4 
.................... #BIT DISP_DECINE = PORTC.5 
.................... #BIT SINC = PORTA.5 
.................... #BIT TRIAC = PORTC.3 
.................... #BIT LED_1 = PORTA.1 
.................... #BIT LED_2 = PORTA.2 
....................  
....................  
.................... #define CHIAVE_PRIMA_ACCENSIONE DATI_MEMO[0] 
.................... #define POTENZA					DATI_MEMO[1] 
.................... #define STEP					DATI_MEMO[2] 
.................... #define MINIMO					DATI_MEMO[3] 
.................... #define ON_OFF					DATI_MEMO[4] 
....................  
....................  
.................... #SEPARATE 
.................... void INIT_MICRO(void); 
.................... #SEPARATE 
.................... void GESTIONE_DISPLAY(int var); 
.................... #SEPARATE 
.................... void SET_DISPLAY(int numero); 
.................... #SEPARATE 
.................... void FILTRO_PULSANTI(void); 
.................... #SEPARATE 
.................... void TASTIERA(void); 
.................... #SEPARATE 
.................... void SALVA_DATI(void); 
.................... #SEPARATE 
.................... void LEGGI_DATI(void); 
.................... #SEPARATE 
.................... void PRE_SET(void); 
....................  
.................... //########################################## 
.................... //         INIZIO ZONA INTERRUPT           # 
.................... //########################################## 
....................  
....................  
....................  
....................  
.................... //****************************************** 
.................... //            Interrupt TX RS232           * 
.................... //****************************************** 
.................... #INT_RDA 
.................... void isr_rda(void){ 
....................  
....................  
.................... } 
....................  
....................  
.................... //****************************************** 
.................... //    Interrupt TMR0 8mS per base tempi    * 
.................... //****************************************** 
....................  
*
0040:  BCF    0C.5
0041:  BCF    0A.3
0042:  GOTO   02B
.................... #INT_TIMER0		                                                                                                
.................... void isr_timer0(void) { 
....................  
.................... if(ON_OFF){ 
0043:  MOVF   41,F
0044:  BTFSC  03.2
0045:  GOTO   04E
.................... 		   TRIAC = 0; 
0046:  BCF    07.3
.................... 		   ++CONT_SINC; 
0047:  INCF   3B,F
.................... 		   if(!SINC)CONT_SINC = 0; 
0048:  BTFSS  05.5
0049:  CLRF   3B
.................... 		   if(CONT_SINC == TIME_INNESCO)TRIAC = 1; 
004A:  MOVF   3C,W
004B:  SUBWF  3B,W
004C:  BTFSC  03.2
004D:  BSF    07.3
.................... 		  } 
....................  
....................  
.................... 		   			  set_timer0(101); 
004E:  MOVLW  65
004F:  MOVWF  01
.................... 			          time1 = true; 
0050:  BSF    2E.0
.................... 			          ++tempo2;			              
0051:  INCF   2F,F
.................... 				      if(tempo2 == 5){ 
0052:  MOVF   2F,W
0053:  SUBLW  05
0054:  BTFSS  03.2
0055:  GOTO   059
.................... 				                      tempo2 = 0;  
0056:  CLRF   2F
.................... 				                      time2 = true; 
0057:  BSF    2E.1
.................... 				                      ++tempo3;	 
0058:  INCF   30,F
.................... 				                      } 
.................... 					                  if(tempo3 == 100){ 
0059:  MOVF   30,W
005A:  SUBLW  64
005B:  BTFSS  03.2
005C:  GOTO   060
.................... 					                                  tempo3 = 0;  
005D:  CLRF   30
.................... 					                                  time3 = true; 
005E:  BSF    2E.2
.................... 													  ++tempo4;				 
005F:  INCF   31,F
.................... 												      } 
.................... 													  if(tempo4 == 10){ 
0060:  MOVF   31,W
0061:  SUBLW  0A
0062:  BTFSS  03.2
0063:  GOTO   066
.................... 					                                 			  	  tempo4 = 0;  
0064:  CLRF   31
.................... 					                                 			 	  time4 = true;				 
0065:  BSF    2E.3
.................... 												     				  } 
.................... } 
....................  
.................... //########################################## 
.................... //		              MAIN                 # 
.................... //########################################## 
....................  
.................... #ZERO_RAM 
....................  
0066:  BCF    0B.2
0067:  BCF    0A.3
0068:  GOTO   02B
.................... void main(void) {  
*
0226:  MOVF   03,W
0227:  ANDLW  1F
0228:  MOVWF  03
0229:  MOVLW  5F
022A:  MOVWF  20
022B:  MOVLW  21
022C:  MOVWF  04
022D:  BCF    03.7
022E:  CLRF   00
022F:  INCF   04,F
0230:  DECFSZ 20,F
0231:  GOTO   22E
0232:  MOVLW  20
0233:  MOVWF  20
0234:  MOVLW  A0
0235:  MOVWF  04
0236:  BCF    03.7
0237:  CLRF   00
0238:  INCF   04,F
0239:  DECFSZ 20,F
023A:  GOTO   237
023B:  CLRF   20
023C:  CLRF   04
023D:  BCF    03.7
023E:  MOVLW  1F
023F:  ANDWF  03,F
0240:  BSF    03.5
0241:  BSF    1F.0
0242:  BSF    1F.1
0243:  BSF    1F.2
0244:  BCF    1F.3
....................  
.................... INIT_MICRO(); 
0245:  BCF    03.5
0246:  GOTO   069
.................... PRE_SET(); 
0247:  GOTO   0CA
....................  
.................... while(1) { 
....................  
.................... 		                                                                                               
.................... if(time1){  
0248:  BTFSS  2E.0
0249:  GOTO   28E
.................... time1=false; 
024A:  BCF    2E.0
.................... //****************************************** 
.................... //		         Uscita 200 uS             * 
.................... //****************************************** 
....................  
.................... restart_wdt(); 
024B:  CLRWDT
....................  
....................  
....................  
....................  
....................  
....................  
....................  
.................... if(time2){ 
024C:  BTFSS  2E.1
024D:  GOTO   28E
.................... time2=false; 
024E:  BCF    2E.1
.................... //****************************************** 
.................... //		           Uscita 1mS              * 
.................... //****************************************** 
....................  
.................... FILTRO_PULSANTI(); 
024F:  GOTO   0E4
....................  
....................  
.................... TASTIERA(); 
0250:  GOTO   10D
....................  
....................  
.................... switch(VIS){ 
0251:  MOVF   35,W
0252:  BTFSC  03.2
0253:  GOTO   25B
0254:  XORLW  01
0255:  BTFSC  03.2
0256:  GOTO   26A
0257:  XORLW  03
0258:  BTFSC  03.2
0259:  GOTO   270
025A:  GOTO   274
.................... 			case 0:  
.................... 				   GESTIONE_DISPLAY(6-POTENZA);  
025B:  MOVF   3E,W
025C:  SUBLW  06
025D:  MOVWF  42
025E:  MOVWF  43
025F:  CALL   1DC
.................... 				   TIME_INNESCO = MINIMO +((POTENZA*STEP)-STEP); 
0260:  MOVF   3E,W
0261:  MOVWF  42
0262:  MOVF   3F,W
0263:  MOVWF  43
0264:  GOTO   201
0265:  MOVF   3F,W
0266:  SUBWF  21,W
0267:  ADDWF  40,W
0268:  MOVWF  3C
.................... 			break;	 
0269:  GOTO   274
....................  
.................... 			case 1:  
.................... 				   GESTIONE_DISPLAY(MINIMO);  
026A:  MOVF   40,W
026B:  MOVWF  43
026C:  CALL   1DC
.................... 				   TIME_INNESCO = MINIMO; 
026D:  MOVF   40,W
026E:  MOVWF  3C
.................... 			break; 
026F:  GOTO   274
....................  
.................... 			case 2:  
.................... 				   GESTIONE_DISPLAY(STEP);  
0270:  MOVF   3F,W
0271:  MOVWF  43
0272:  CALL   1DC
.................... 			break; 
0273:  GOTO   274
.................... 		   } 
....................  
....................  
....................  
....................  
.................... if(time3){ 
0274:  BTFSS  2E.2
0275:  GOTO   28E
.................... time3=false; 
0276:  BCF    2E.2
.................... //****************************************** 
.................... //		           Uscita 100mS            * 
.................... //****************************************** 
....................  
....................  
....................  
....................  
....................  
....................  
....................  
....................  
....................  
....................  
....................  
.................... if(time4){ 
0277:  BTFSS  2E.3
0278:  GOTO   28E
.................... time4=false; 
0279:  BCF    2E.3
.................... //****************************************** 
.................... //		           Uscita 1S               * 
.................... //****************************************** 
....................  
....................  
....................  
.................... if(VIS){ 
027A:  MOVF   35,F
027B:  BTFSC  03.2
027C:  GOTO   286
.................... 		++TIME_VIS; 
027D:  INCF   36,F
.................... 		if(TIME_VIS >= 60){VIS = 0; LED_1 = 0; LED_2 = 0;} 
027E:  MOVF   36,W
027F:  SUBLW  3B
0280:  BTFSC  03.0
0281:  GOTO   285
0282:  CLRF   35
0283:  BCF    05.1
0284:  BCF    05.2
.................... 	   }else{ 
0285:  GOTO   287
.................... 		TIME_VIS = 0; 
0286:  CLRF   36
.................... 	   } 
....................  
....................  
....................  
....................  
....................  
.................... if(TIME_SALVATAGGIO){ 
0287:  MOVF   32,F
0288:  BTFSC  03.2
0289:  GOTO   28E
.................... 					 --TIME_SALVATAGGIO; 
028A:  DECF   32,F
.................... 					 if(TIME_SALVATAGGIO == 1){ 
028B:  DECFSZ 32,W
028C:  GOTO   28E
.................... 											   SALVA_DATI(); 
028D:  CALL   09E
.................... 											  } 
.................... 					} 
....................  
....................  
....................  
....................  
....................  
....................  
.................... 	 } 
....................     } 
....................    } 
....................   }   
....................  } 
028E:  GOTO   248
.................... } 
....................  
.................... //########################################### 
.................... //		         END MAIN                   # 
.................... //########################################### 
....................  
....................  
.................... //########################################### 
.................... //         INIZIALIZZAZIONI MICRO           # 
.................... //########################################### 
....................  
.................... #SEPARATE 
.................... void INIT_MICRO(void){ 
028F:  SLEEP
....................  
.................... setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1); 
*
0069:  BSF    03.5
006A:  MOVF   01,W
006B:  ANDLW  C7
006C:  IORLW  08
006D:  MOVWF  01
.................... set_timer0(10); 
006E:  MOVLW  0A
006F:  BCF    03.5
0070:  MOVWF  01
.................... enable_interrupts(INT_TIMER0); 
0071:  BSF    0B.5
.................... enable_interrupts(GLOBAL); 
0072:  MOVLW  C0
0073:  IORWF  0B,F
.................... //enable_interrupts(INT_RDA); 
....................  
.................... set_tris_A(0b111001); 
0074:  MOVLW  39
0075:  BSF    03.5
0076:  MOVWF  05
.................... set_tris_B(0b00000000); 
0077:  MOVLW  00
0078:  MOVWF  06
.................... set_tris_C(0b11000111); 
0079:  MOVLW  C7
007A:  MOVWF  07
.................... PORTA = 0; 
007B:  BCF    03.5
007C:  CLRF   05
.................... PORTB = 0; 
007D:  CLRF   06
.................... PORTC = 0; 
007E:  CLRF   07
....................  
.................... setup_adc_ports(NO_ANALOGS); 
007F:  BSF    03.5
0080:  BSF    1F.0
0081:  BSF    1F.1
0082:  BSF    1F.2
0083:  BCF    1F.3
....................  
.................... //setup_adc(ADC_CLOCK_DIV_8); 
.................... //set_adc_channel(0); 
.................... //bit_clear(ADCON1,7); 
....................  
.................... } 
0084:  BCF    03.5
0085:  GOTO   247 (RETURN)
....................  
.................... //****************************************************************************************************************************** 
....................  
.................... #SEPARATE 
.................... void GESTIONE_DISPLAY(int var){ 
....................  
.................... if(ON_OFF){ 
*
01DC:  MOVF   41,F
01DD:  BTFSC  03.2
01DE:  GOTO   1FD
.................... 			UNITA = var%10; 
01DF:  MOVF   43,W
01E0:  MOVWF  44
01E1:  MOVLW  0A
01E2:  MOVWF  45
01E3:  CALL   17C
01E4:  MOVF   20,W
01E5:  MOVWF  33
.................... 			DECINE = var/10; 
01E6:  MOVF   43,W
01E7:  MOVWF  44
01E8:  MOVLW  0A
01E9:  MOVWF  45
01EA:  CALL   17C
01EB:  MOVF   21,W
01EC:  MOVWF  34
....................  
.................... 			if(SW_DISP){ 
01ED:  BTFSS  2E.4
01EE:  GOTO   1F6
.................... 						SW_DISP = 0; 
01EF:  BCF    2E.4
.................... 						DISP_DECINE = 0; 
01F0:  BCF    07.5
.................... 						SET_DISPLAY(UNITA); 
01F1:  MOVF   33,W
01F2:  MOVWF  44
01F3:  CALL   191
.................... 						DISP_UNITA = 1; 
01F4:  BSF    07.4
.................... 					   }else{ 
01F5:  GOTO   1FC
.................... 						SW_DISP = 1; 
01F6:  BSF    2E.4
.................... 						DISP_UNITA = 0; 
01F7:  BCF    07.4
.................... 						SET_DISPLAY(DECINE); 
01F8:  MOVF   34,W
01F9:  MOVWF  44
01FA:  CALL   191
.................... 						DISP_DECINE = 1; 
01FB:  BSF    07.5
.................... 					   } 
.................... 		  }else{ 
01FC:  GOTO   200
.................... 		   portb=(0b00000000); 
01FD:  CLRF   06
.................... 		   DISP_UNITA = 0; 
01FE:  BCF    07.4
.................... 		   DISP_DECINE = 0; 
01FF:  BCF    07.5
.................... 		  } 
....................  
.................... } 
0200:  RETLW  00
....................  
.................... //****************************************************************************************************************************** 
....................  
.................... #SEPARATE 
.................... void SET_DISPLAY(int numero){ 
....................  
.................... switch(numero){ 
*
0191:  MOVF   44,W
0192:  ADDLW  F0
0193:  BTFSC  03.0
0194:  GOTO   1C7
0195:  ADDLW  10
0196:  GOTO   1C8
.................... 				case 0:portb=(0b11111100); break;		/* Numero 0 */ 
0197:  MOVLW  FC
0198:  MOVWF  06
0199:  GOTO   1C7
.................... 				case 1:portb=(0b01100000); break;		/* Numero 1 */ 
019A:  MOVLW  60
019B:  MOVWF  06
019C:  GOTO   1C7
.................... 				case 2:portb=(0b11011010); break;		/* Numero 2 */ 
019D:  MOVLW  DA
019E:  MOVWF  06
019F:  GOTO   1C7
.................... 				case 3:portb=(0b11110010); break;		/* Numero 3 */ 
01A0:  MOVLW  F2
01A1:  MOVWF  06
01A2:  GOTO   1C7
.................... 				case 4:portb=(0b01100110); break;		/* Numero 4 */ 
01A3:  MOVLW  66
01A4:  MOVWF  06
01A5:  GOTO   1C7
.................... 				case 5:portb=(0b10110110); break;       /* Numero 5 */ 
01A6:  MOVLW  B6
01A7:  MOVWF  06
01A8:  GOTO   1C7
.................... 				case 6:portb=(0b10111110); break;		/* Numero 6 */ 
01A9:  MOVLW  BE
01AA:  MOVWF  06
01AB:  GOTO   1C7
.................... 				case 7:portb=(0b11100000); break;		/* Numero 7 */ 
01AC:  MOVLW  E0
01AD:  MOVWF  06
01AE:  GOTO   1C7
.................... 				case 8:portb=(0b11111110); break;		/* Numero 8 */ 
01AF:  MOVLW  FE
01B0:  MOVWF  06
01B1:  GOTO   1C7
.................... 				case 9:portb=(0b11110110); break;		/* Numero 9 */ 
01B2:  MOVLW  F6
01B3:  MOVWF  06
01B4:  GOTO   1C7
.................... 				case 10:portb=(0b11101110); break;    	/* Lettera A */ 
01B5:  MOVLW  EE
01B6:  MOVWF  06
01B7:  GOTO   1C7
.................... 				case 11:portb=(0b00111110); break;    	/* Lettera b */ 
01B8:  MOVLW  3E
01B9:  MOVWF  06
01BA:  GOTO   1C7
.................... 				case 12:portb=(0b10011100); break;		/* Lettera C */ 
01BB:  MOVLW  9C
01BC:  MOVWF  06
01BD:  GOTO   1C7
.................... 				case 13:portb=(0b01111010); break;		/* Lettera d */ 
01BE:  MOVLW  7A
01BF:  MOVWF  06
01C0:  GOTO   1C7
.................... 				case 14:portb=(0b10011110); break;		/* Lettera E*/ 
01C1:  MOVLW  9E
01C2:  MOVWF  06
01C3:  GOTO   1C7
.................... 				case 15:portb=(0b11111110); break;		/* Display tutto acceso */		 
01C4:  MOVLW  FE
01C5:  MOVWF  06
01C6:  GOTO   1C7
.................... 			 } 
.................... } 
01C7:  RETLW  00
....................  
.................... //****************************************************************************************************************************** 
....................  
.................... #SEPARATE 
.................... void FILTRO_PULSANTI(void){ 
....................  
.................... 	temporaneo = (portc & 0b00000111); 
*
00E4:  MOVF   07,W
00E5:  ANDLW  07
00E6:  MOVWF  37
.................... 	 
.................... 	if(temporaneo){ 
00E7:  MOVF   37,F
00E8:  BTFSC  03.2
00E9:  GOTO   0FF
.................... 			if(era_premuto == 0)filtro = 80; 
00EA:  BTFSC  2E.6
00EB:  GOTO   0EE
00EC:  MOVLW  50
00ED:  MOVWF  38
.................... 			era_premuto = 1; 
00EE:  BSF    2E.6
.................... 			--filtro; 
00EF:  DECFSZ 38,F
.................... 			if(filtro == 0){ 
00F0:  GOTO   0FE
.................... 			     	     premuto = 1; 
00F1:  BSF    2E.5
.................... 			     	     --ripetizione; 
00F2:  DECF   39,F
.................... 			             filtro = 1; 
00F3:  MOVLW  01
00F4:  MOVWF  38
.................... 			             if(ripetizione == 0){ 
00F5:  MOVF   39,F
00F6:  BTFSS  03.2
00F7:  GOTO   0FE
.................... 											  ripetizione = 40;  
00F8:  MOVLW  28
00F9:  MOVWF  39
.................... 									          premuto = 0;  
00FA:  BCF    2E.5
.................... 									          era_premuto = 0; 
00FB:  BCF    2E.6
.................... 									          filtro = 1; 
00FC:  MOVLW  01
00FD:  MOVWF  38
.................... 									         } 
.................... 			             } 
.................... 	 
.................... 		      }else{ 
00FE:  GOTO   10A
.................... 		           ripetizione = 0;	 
00FF:  CLRF   39
.................... 		           if(era_premuto)filtro = 80; 
0100:  BTFSS  2E.6
0101:  GOTO   104
0102:  MOVLW  50
0103:  MOVWF  38
.................... 		           era_premuto = 0; 
0104:  BCF    2E.6
.................... 		           --filtro; 
0105:  DECFSZ 38,F
.................... 		           if(filtro == 0){premuto = 0, filtro = 1;}			 
0106:  GOTO   10A
0107:  BCF    2E.5
0108:  MOVLW  01
0109:  MOVWF  38
.................... 	              } 
.................... 	 
.................... 	tasti = temporaneo;				 
010A:  MOVF   37,W
010B:  MOVWF  3A
.................... } 
010C:  GOTO   250 (RETURN)
....................  
.................... //****************************************************************************************************************************** 
....................  
.................... #SEPARATE 
.................... void TASTIERA(void){ 
....................  
.................... 	if(premuto){	 
010D:  BTFSS  2E.5
010E:  GOTO   17A
.................... 		        if(premuto_f==false){ 
010F:  BTFSC  2E.7
0110:  GOTO   179
.................... 		 
.................... 									if((tasti==0b00000100)&&(ON_OFF)){ 
0111:  MOVF   3A,W
0112:  SUBLW  04
0113:  BTFSS  03.2
0114:  GOTO   131
0115:  MOVF   41,F
0116:  BTFSC  03.2
0117:  GOTO   131
....................  
.................... 																	  TIME_VIS = 0; 
0118:  CLRF   36
.................... 			 
.................... 																	  if(VIS == 0){ 
0119:  MOVF   35,F
011A:  BTFSS  03.2
011B:  GOTO   121
.................... 																				   if(POTENZA > 1)--POTENZA; 
011C:  MOVF   3E,W
011D:  SUBLW  01
011E:  BTFSS  03.0
011F:  DECF   3E,F
.................... 																				  } 
.................... 			 
.................... 																	  else if(VIS == 1){ 
0120:  GOTO   130
0121:  DECFSZ 35,W
0122:  GOTO   128
.................... 																						if(MINIMO < 52)++MINIMO; 
0123:  MOVF   40,W
0124:  SUBLW  33
0125:  BTFSC  03.0
0126:  INCF   40,F
.................... 																					   } 
.................... 			 
.................... 																	  else if(VIS == 2){ 
0127:  GOTO   130
0128:  MOVF   35,W
0129:  SUBLW  02
012A:  BTFSS  03.2
012B:  GOTO   130
.................... 																						if(STEP < 5)++STEP; 
012C:  MOVF   3F,W
012D:  SUBLW  04
012E:  BTFSC  03.0
012F:  INCF   3F,F
.................... 																					   } 
.................... 																	 
.................... 														    		 } 
.................... 							 
.................... 									else if((tasti==0b00000001)&&(ON_OFF)){ 
0130:  GOTO   176
0131:  DECFSZ 3A,W
0132:  GOTO   14E
0133:  MOVF   41,F
0134:  BTFSC  03.2
0135:  GOTO   14E
....................  
.................... 																		   TIME_VIS = 0; 
0136:  CLRF   36
.................... 			 
.................... 																		   if(VIS == 0){ 
0137:  MOVF   35,F
0138:  BTFSS  03.2
0139:  GOTO   13F
.................... 																				        if(POTENZA < 5)++POTENZA; 
013A:  MOVF   3E,W
013B:  SUBLW  04
013C:  BTFSC  03.0
013D:  INCF   3E,F
.................... 																					   } 
.................... 				 
.................... 																		   else if(VIS == 1){ 
013E:  GOTO   14D
013F:  DECFSZ 35,W
0140:  GOTO   145
.................... 																							 if(MINIMO > 0)--MINIMO; 
0141:  MOVF   40,F
0142:  BTFSS  03.2
0143:  DECF   40,F
.................... 																						    } 
.................... 				 
.................... 																		   else if(VIS == 2){ 
0144:  GOTO   14D
0145:  MOVF   35,W
0146:  SUBLW  02
0147:  BTFSS  03.2
0148:  GOTO   14D
.................... 																							 if(STEP > 1)--STEP; 
0149:  MOVF   3F,W
014A:  SUBLW  01
014B:  BTFSS  03.0
014C:  DECF   3F,F
.................... 																						    } 
.................... 			 
.................... 														    		 	  } 
.................... 							 
.................... 									else if((tasti==0b00000010)&&(!VIS)){ 
014D:  GOTO   176
014E:  MOVF   3A,W
014F:  SUBLW  02
0150:  BTFSS  03.2
0151:  GOTO   159
0152:  MOVF   35,F
0153:  BTFSS  03.2
0154:  GOTO   159
....................  
.................... 																	     TIME_VIS = 0; 
0155:  CLRF   36
.................... 																	     ON_OFF = ~ON_OFF; 
0156:  COMF   41,F
.................... 																	     ripetizione = 0; 
0157:  CLRF   39
....................  
.................... 													     		 	    } 
....................  
....................  
.................... 									else if((tasti==0b00000101)&&(ON_OFF)){ 
0158:  GOTO   176
0159:  MOVF   3A,W
015A:  SUBLW  05
015B:  BTFSS  03.2
015C:  GOTO   176
015D:  MOVF   41,F
015E:  BTFSC  03.2
015F:  GOTO   176
.................... 																		   if(VIS == 0){ 
0160:  MOVF   35,F
0161:  BTFSS  03.2
0162:  GOTO   168
.................... 																						VIS = 1; 
0163:  MOVLW  01
0164:  MOVWF  35
.................... 																						LED_1 = 1; 
0165:  BSF    05.1
.................... 																						LED_2 = 0; 
0166:  BCF    05.2
.................... 																					   } 
.................... 			 
.................... 																		   else if(VIS == 1){ 
0167:  GOTO   176
0168:  DECFSZ 35,W
0169:  GOTO   16F
.................... 																						     VIS = 2; 
016A:  MOVLW  02
016B:  MOVWF  35
.................... 																							 LED_1 = 0; 
016C:  BCF    05.1
.................... 																							 LED_2 = 1; 
016D:  BSF    05.2
.................... 																					   		} 
.................... 			 
.................... 																		   else if(VIS == 2){ 
016E:  GOTO   176
016F:  MOVF   35,W
0170:  SUBLW  02
0171:  BTFSS  03.2
0172:  GOTO   176
.................... 																						     VIS = 0; 
0173:  CLRF   35
.................... 																							 LED_1 = 0; 
0174:  BCF    05.1
.................... 																							 LED_2 = 0; 
0175:  BCF    05.2
.................... 																					   		} 
.................... 																		  } 
.................... 									 
.................... 									premuto_f=true; 
0176:  BSF    2E.7
....................  
.................... 									TIME_SALVATAGGIO = 11; 
0177:  MOVLW  0B
0178:  MOVWF  32
.................... 									} 
.................... 	}else{  
0179:  GOTO   17B
.................... 	premuto_f=false;	 
017A:  BCF    2E.7
.................... 	} 
....................  
.................... } 
017B:  GOTO   251 (RETURN)
....................  
.................... //****************************************************************************************************************************** 
....................  
.................... #SEPARATE 
.................... void SALVA_DATI(void){ 
.................... int n_memo; 
....................  
.................... for(n_memo = 0; n_memo < 5; n_memo++){ 
*
009E:  CLRF   42
009F:  MOVF   42,W
00A0:  SUBLW  04
00A1:  BTFSS  03.0
00A2:  GOTO   0C9
.................... 								   	   write_eeprom (n_memo,DATI_MEMO[n_memo]); 
00A3:  MOVLW  3D
00A4:  ADDWF  42,W
00A5:  MOVWF  04
00A6:  BCF    03.7
00A7:  MOVF   00,W
00A8:  MOVWF  43
00A9:  MOVF   42,W
00AA:  BSF    03.6
00AB:  MOVWF  0D
00AC:  BCF    03.6
00AD:  MOVF   43,W
00AE:  BSF    03.6
00AF:  MOVWF  0C
00B0:  BSF    03.5
00B1:  BCF    0C.7
00B2:  BSF    0C.2
00B3:  BCF    03.5
00B4:  BCF    03.6
00B5:  MOVF   0B,W
00B6:  MOVWF  20
00B7:  BCF    0B.7
00B8:  BSF    03.5
00B9:  BSF    03.6
00BA:  MOVLW  55
00BB:  MOVWF  0D
00BC:  MOVLW  AA
00BD:  MOVWF  0D
00BE:  BSF    0C.1
00BF:  BTFSC  0C.1
00C0:  GOTO   0BF
00C1:  BCF    0C.2
00C2:  BCF    03.5
00C3:  BCF    03.6
00C4:  MOVF   20,W
00C5:  IORWF  0B,F
.................... 									   restart_wdt(); 
00C6:  CLRWDT
.................... 									  } 
00C7:  INCF   42,F
00C8:  GOTO   09F
.................... } 
00C9:  RETLW  00
....................  
.................... //------------------------------------------------------------------------------------------------------------ 
....................  
.................... #SEPARATE 
.................... void LEGGI_DATI(void){ 
.................... int n_memo; 
....................  
.................... for(n_memo = 1; n_memo < 5; n_memo++){ 
*
0086:  MOVLW  01
0087:  MOVWF  42
0088:  MOVF   42,W
0089:  SUBLW  04
008A:  BTFSS  03.0
008B:  GOTO   09D
.................... 									   DATI_MEMO[n_memo] = read_EEPROM (n_memo); 
008C:  MOVLW  3D
008D:  ADDWF  42,W
008E:  MOVWF  04
008F:  BCF    03.7
0090:  MOVF   42,W
0091:  BSF    03.6
0092:  MOVWF  0D
0093:  BSF    03.5
0094:  BCF    0C.7
0095:  BSF    0C.0
0096:  BCF    03.5
0097:  MOVF   0C,W
0098:  MOVWF  00
.................... 									   restart_wdt(); 
0099:  CLRWDT
.................... 									  } 
009A:  BCF    03.6
009B:  INCF   42,F
009C:  GOTO   088
.................... } 
009D:  GOTO   0D8 (RETURN)
....................  
.................... //------------------------------------------------------------------------------------------------------------ 
....................  
.................... #SEPARATE 
.................... void PRE_SET(void){ 
....................  
.................... CHIAVE_PRIMA_ACCENSIONE = read_EEPROM (0); 
*
00CA:  BSF    03.6
00CB:  CLRF   0D
00CC:  BSF    03.5
00CD:  BCF    0C.7
00CE:  BSF    0C.0
00CF:  BCF    03.5
00D0:  MOVF   0C,W
00D1:  BCF    03.6
00D2:  MOVWF  3D
....................  
.................... if(CHIAVE_PRIMA_ACCENSIONE == 170){ 
00D3:  MOVF   3D,W
00D4:  SUBLW  AA
00D5:  BTFSS  03.2
00D6:  GOTO   0D9
.................... 								   LEGGI_DATI(); 
00D7:  GOTO   086
.................... 								  }else{ 
00D8:  GOTO   0E3
.................... 								   CHIAVE_PRIMA_ACCENSIONE = 170; 
00D9:  MOVLW  AA
00DA:  MOVWF  3D
.................... 								   POTENZA = 5; 
00DB:  MOVLW  05
00DC:  MOVWF  3E
.................... 								   STEP = 3; 
00DD:  MOVLW  03
00DE:  MOVWF  3F
.................... 								   MINIMO = 25; 
00DF:  MOVLW  19
00E0:  MOVWF  40
.................... 								   ON_OFF = 0; 
00E1:  CLRF   41
....................  
.................... 								   SALVA_DATI(); 
00E2:  CALL   09E
.................... 								  } 
....................  
....................  
.................... } 
00E3:  GOTO   248 (RETURN)
....................  
.................... //------------------------------------------------------------------------------------------------------------ 

Configuration Fuses:
   Word  1: 3F75   XT WDT PUT NOPROTECT NODEBUG BROWNOUT NOLVP NOCPD NOWRT
